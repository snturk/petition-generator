package org.snturk.petition;

import org.immutables.value.Value;
import jakarta.annotation.Nullable;
import org.snturk.petition.enums.PetitionType;
import org.snturk.petition.model.Issuer;

import java.io.File;
import java.time.LocalDate;
import java.util.Map;
import java.util.function.Function;

@Value.Immutable
@Value.Style(strictBuilder = true)
public abstract class Petition {

    /**
     * By default id is generated by idGenerator function, but it can be overridden by setting id explicitly.
     * @return
     */
    @Value.Default
    public @Nullable String id() {
        return idGenerator().apply(this);
    }

    /**
     * Name of the petition
     * @return
     */
    public abstract String name();

    /**
     * Title of the petition
     * @return
     */
    public abstract String title();

    /**
     * Issuer or signer of the petition
     * @return
     */
    public abstract Issuer issuer();

    /**
     * Date of the petition
     * @return
     */
    @Value.Default
    public LocalDate issuedDate() {
        return LocalDate.now();
    }

    /**
     * Type of the petition
     * @see PetitionType
     * @return PetitionType
     */
    public abstract @Nullable PetitionType type();

    /**
     * Related attachments of the petition, key is the name of the attachment, value is the java.io.File object
     * @return
     */
    public abstract @Nullable Map<String, File> attachments();

    /**
     * Function to generate id of the petition
     * @return
     */
    public abstract Function<Petition, String> idGenerator();
}
