# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  jacoco-java-maven:

    runs-on: ubuntu-latest

    steps:
      -   name: Checkout
          uses: actions/checkout@v3


      -   name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'

      -   name: Build with Maven
          run: mvn -B package -Pcoverage

      -   name: Generate JaCoCo badge
          id: jacoco
          uses: cicirello/jacoco-badge-generator@v2
          with:
            badges-directory: badges
            generate-branches-badge: true
            generate-summary: true

      -   name: Log coverage percentages to workflow output
          run: |
            echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
            echo "branches = ${{ steps.jacoco.outputs.branches }}"

      -   name: Upload JaCoCo coverage report as a workflow artifact
          uses: actions/upload-artifact@v3
          with:
            name: jacoco-report
            path: target/site/jacoco/


      -   name: Comment on PR with coverage percentages
          if: ${{ github.event_name == 'pull_request' }}
          run: |
            REPORT=$(<badges/coverage-summary.json)
            COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
            BRANCHES=$(jq -r '.branches' <<< "$REPORT")%
            NEWLINE=$'\n'
            BODY="## JaCoCo Test Coverage Summary Statistics${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
            gh pr comment ${{github.event.pull_request.number}} -b "${BODY}"
          continue-on-error: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      -   name: Get the Coverage info
          run: |
            echo "Total coverage ${{ steps.jacoco.outputs.coverage-overall }}"
            echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"
